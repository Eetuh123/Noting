@page "/chart"
@inject IJSRuntime JS

<div class="w-[700px] mx-auto my-8">

    <div style="
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        font-size: 0.9rem;
      ">

        <span>
            Avg.&nbsp;R <strong>@AvgRep</strong>
        </span>

        <span>
            5&nbsp;Rep <strong>@Rep5</strong>
        </span>

        <span style="color: #e74c3c;">
            15&nbsp;Rep <strong>@Rep15</strong>
        </span>

        <span style="display: flex; align-items: center; gap: 4px;">
            <span style="
            display: inline-block;
            width: 16px; height: 8px;
            border-radius: 4px;
            background: #e74c3c;
          "></span>
            <strong>@Weight</strong>&nbsp;kg
        </span>

        <span style="display: flex; align-items: center; gap: 4px;">
            <span style="
            display: inline-block;
            width: 16px; height: 8px;
            border-radius: 4px;
            background: #2ecc71;
          "></span>
            <strong>@SecondaryWeight</strong>&nbsp;kg
        </span>
    </div>

    <canvas id="benchChart" width="700" height="350"></canvas>
</div>

@code {
    private int AvgRep = 8;
    private int Rep5 = 5;
    private int Rep15 = 15;
    private int Weight = 40;
    private int SecondaryWeight = 20;

    private object _chartRef;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        var config = new
        {
            type = "bar",
            data = new
            {
                labels = new[] {
          "1 W","2 W","3 W","4 W","5 W","6 W",
          "7 W","8 W","9 W","10 W","11 W","12 W"
        },
                datasets = new object[] {
                               new {
            type = "line",
            label = "Reps",
            yAxisID   = "y2",
            data = new[] {5,8,7,10,6,12,9,15,14,16,18,20},
            borderColor = "#333",
            borderWidth = 2,
            fill = false,
            tension = 0.1
          },
          new {
            type = "bar",
            label = "Weight (kg)",
            yAxisID   = "y",
            data = new[] {20,30,25,40,35,45,38,50,48,55,52,60},
            backgroundColor = "rgba(231,76,60,0.8)"
          },
    }
            },
            options = new
            {
                plugins = new
                {
                    legend = new { display = false },
                    tooltip = new { mode = "index", intersect = false }
                },
                scales = new
                {
                    x = new { grid = new { display = false } },
                    y = new
                    {
                        beginAtZero = true,
                        grid = new { borderDash = new[] { 4, 2 } }
                    },
                    y2 = new
                    {
                        beginAtZero = true,
                        grid = new { drawOnChartArea = false }

                    }

                }
            }
        };

        // call into window.exerciseChart.create(...)
        _chartRef = await JS.InvokeAsync<object>(
          "exerciseChart.create",
          "benchChart",
          config
        );
    }

    public async ValueTask DisposeAsync()
    {
        if (_chartRef != null)
            await JS.InvokeVoidAsync("exerciseChart.destroy", _chartRef);
    }
}
