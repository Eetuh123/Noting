@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web

<div class="flex items-center space-x-2 bg-gray-100 rounded-lg shadow p-2">
    <svg class="w-5 h-5 text-gray-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M21 21l-4.35-4.35m0 0a7.5 7.5 0 10-10.6 0 7.5 7.5 0 0010.6 0z" />
    </svg>

    @foreach (var term in Terms)
    {
        <span class="flex items-center bg-gray-300 text-gray-700 text-sm px-3 py-1 rounded-full cursor-pointer"
              @onclick="() => RemoveTerm(term)">
            @term
        </span>
    }

    <input class="flex-1 bg-transparent focus:outline-none px-2 py-1 text-gray-900"
           placeholder="Type to search…"
           @bind="CurrentEntry"
           @bind:event="oninput"
           @onkeydown="OnKeyDown" />
</div>

@code {
    [Parameter] public EventCallback<List<string>> OnSearchChanged { get; set; }

    private List<string> Terms = new();
    private string CurrentEntry;

    private void OnKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && !string.IsNullOrWhiteSpace(CurrentEntry))
        {
            var term = CurrentEntry.Trim();
            if (!Terms.Contains(term))
                Terms.Add(term);
            CurrentEntry = "";
            OnSearchChanged.InvokeAsync(Terms.ToList());
        }
    }

    private void RemoveTerm(string term)
    {
        Terms.Remove(term);
        OnSearchChanged.InvokeAsync(Terms.ToList());
    }
}
